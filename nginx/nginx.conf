events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Connection limiting - prevent too many connections from single IP
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Rate limiting - Enhanced security
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=contact:10m rate=2r/m;  # Contact form
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;   # File uploads
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s; # General requests
    
    # Block common attack patterns
    map $request_uri $is_blocked_uri {
        default 0;
        "~*\.(env|git|svn|htaccess)" 1;
        "~*(/\.git/|/\.svn/|/\.env)" 1;
        "~*(base64_encode|eval\(|gzinflate)" 1;
        "~*(script.*>|<.*iframe)" 1;
    }
    
    # Block suspicious user agents
    map $http_user_agent $is_blocked_agent {
        default 0;
        # Don't block empty user agents - breaks Docker internal communication
        # "~*^$" 1;
        "~*(sqlmap|nikto|nmap|masscan|nessus)" 1;
        # Don't block wget/curl - breaks monitoring and internal health checks
        # "~*(wget|curl)" 1;
    }

    upstream backend {
        server homepage_backend:8000;
    }

    upstream frontend {
        server homepage_frontend:3000;
    }

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        server_name itsusi.eu www.itsusi.eu;

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTP Server for local/IP access (no redirect)
    server {
        listen 80 default_server;
        server_name _;

        # All your existing configuration for local access
        # (Keep this for internal 192.168.0.90 access)

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'";

        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Authentication routes with stricter rate limiting
        location ~ ^/(login|register|token) {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Serve uploads/media files directly
        location /uploads/ {
            alias /var/www/uploads/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Serve React build assets
        location /assets/ {
            alias /var/www/build/assets/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Serve static HTML files
        location ~ ^/(arcade|terminal)\.html$ {
            root /var/www/html;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Serve EmulatorJS files
        location /emulatorjs/ {
            root /var/www/html;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Serve other static files
        location ~ \.(ico|png|jpg|jpeg|gif|svg|css|js|woff|woff2|ttf|eot|txt|xml|webmanifest)$ {
            root /var/www/html;
            try_files $uri @try_build;
            expires 1d;
            add_header Cache-Control "public";
        }

        location @try_build {
            root /var/www/build;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Main React app
        location = / {
            root /var/www/build;
            try_files /index.html =404;
            add_header Cache-Control "no-cache, must-revalidate";
        }

        # React routes
        location / {
            root /var/www/build;
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            root /var/www/build;
            try_files /index.html @proxy;
        }

        location @proxy {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name itsusi.eu www.itsusi.eu;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Block suspicious requests
        # Temporarily disabled to debug 403 errors
        # if ($is_blocked_uri) {
        #     return 403;
        # }
        # Note: Removed $is_blocked_agent check - it was blocking internal Docker communication
        # Attack tool blocking is still active in the map, but we don't enforce it with 'if'
        # to prevent breaking legitimate internal requests

        # Connection and size limits
        limit_conn addr 20;  # Max 20 concurrent connections per IP
        client_max_body_size 10M;
        client_body_timeout 10s;
        client_header_timeout 10s;

        # General rate limiting
        limit_req zone=general burst=50 nodelay;

        # API routes
        location /api/contact {
            limit_req zone=contact burst=2 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        location /api/upload {
            limit_req zone=upload burst=3 nodelay;
            client_max_body_size 5M;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts (longer for uploads)
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Authentication routes with stricter rate limiting
        location ~ ^/(login|register|token) {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Serve uploads/media files directly
        location /uploads/ {
            alias /var/www/uploads/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Serve React build assets
        location /assets/ {
            alias /var/www/build/assets/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Serve static HTML files
        location ~ ^/(arcade|terminal)\.html$ {
            root /var/www/html;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Serve EmulatorJS files
        location /emulatorjs/ {
            root /var/www/html;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Serve other static files
        location ~ \.(ico|png|jpg|jpeg|gif|svg|css|js|woff|woff2|ttf|eot|txt|xml|webmanifest)$ {
            root /var/www/html;
            try_files $uri @try_build;
            expires 1d;
            add_header Cache-Control "public";
        }

        location @try_build {
            root /var/www/build;
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

        # Main React app
        location = / {
            root /var/www/build;
            try_files /index.html =404;
            add_header Cache-Control "no-cache, must-revalidate";
        }

        # React routes
        location / {
            root /var/www/build;
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            root /var/www/build;
            try_files /index.html @proxy;
        }

        location @proxy {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Jellyfin HTTPS Server
    server {
        listen 443 ssl http2;
        server_name jellyfin.itsusi.eu;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/jellyfin-fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/jellyfin-privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy to Jellyfin server
        location / {
            proxy_pass http://192.168.0.167:8096;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # WebSocket support for Jellyfin
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Buffering
            proxy_buffering off;
        }
    }

    # Jellyfin HTTP redirect
    server {
        listen 80;
        server_name jellyfin.itsusi.eu;
        
        # Redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    types_hash_max_size 4096;
    types_hash_bucket_size 256;
}
